1. C드라이브에 back_end 폴더 생성 후 그 안에 blog폴더 생성하고 넣어줘야 함.


2. sql -> 
사용자 root 비밀번호 1234 세션 hr
데이터 베이스 spring 생성

kuser table의 primary key - userid랑 form table의 foreign-key - userid 연결
kuser table의 primary key - userid랑 comment table의 foreign-key - userid 연결
form table의 primary key - seq랑 comment table의 foreign-key - seq 연결
전부 delete 될때 casecade 설정

3. 처음 시작할 시 
;jsessionid=C9A6F01130D3FE4AB96AA9ABF1CD89AE 해당 주소 url 이 뜨고 에러나 나올 수 있는데 
이는 /login창 다시 가서 하면 제대로 실행 함.
( 맨 처음 index파일을 먼저 찾는데 첫 시작이 index파일 이 아니라서 그런듯 함.)

----------------------------------------------------------------------------------------------------------------------------------------------------
기능 구현 :
맞지 않은 로그인 정보 실패 메세지 후 재로그인
회원가입 : 빈칸 확인(빈칸 있을 시 회원가입 불가능)
로그인 후 오른쪽 위 로그인user에 따른 다른 프로필 사진과 아이디 닉네임 표현 및 전환을 통한 로그아웃과 탈퇴를 통한 유저 탈퇴
(탈퇴 시 탈퇴한 유저의 게시글과 댓글 삭제)
+ 버튼 클릭 시 게시글 작성(작성 후 메인페이지 이동 및 작성한 사람의 이름과 이미지 시간 구현)
유저마다 게시글을 쓸 수 있고 로그인한 유저에 따라 본인 게시글만 수정/삭제 가능(삭제 시 댓글도 같이 삭제)
댓글도 마찬가지

----------------------------------------------------------------------------------------------------------------------------------------------------

version0 -> 
session 없이 crud구현했다가 망함

version1 ->
session 있는 상태에서 게시글 추가시 session.kuser.userid에 맞는 게시글만 수정/삭제 표시

version2 ->
session 로그인 한 상태에서 게시글 추가(사진포함) 가능 session.kuser.userid에 맞는 게시글 UD 가능

version3 ->
게시글 seq에 맞는 댓글 DB저장 및 메인페이지에 띄우기
게시글 삭제시 댓글도 같이 삭제(comment table의 seq foreign키가 form table의 seq primary키를 참조하도록 DB설정) 

version4 ->
유저 댓글 삭제, 가입페이지 이동, 비밀번호 찾기 이동, 회원가입 

version5 ->
회원가입중복확인문, 회원가입빈칸확인문, 아이디입력오류확인문, 전환확인문

version6 ->
회원가입시 사진 업로드, 로그인 후 계정에 맞는 계정이미지 변경 및 게시글 등록시 게시글 작성자 이미지 저장 및 표현

version7 ->
게시글 입력/수정부분 css 작성

version8 ->
게시글 생성/수정/삭제 확인문, 댓글 삭제 확인문


